extend type Query {
  """
  ✨ Look up a single `Client` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  client(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Client_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Client_FirstRow
  ): Client @fdc_generated(from: "Client", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Employee` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  employee(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Employee_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Employee_FirstRow
  ): Employee @fdc_generated(from: "Employee", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Pet` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  pet(
    """
    The key used to identify the object.
    """
    key: Pet_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Pet_FirstRow
  ): Pet @fdc_generated(from: "Pet", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Sale` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  sale(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Sale_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Sale_FirstRow
  ): Sale @fdc_generated(from: "Sale", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `SaleServices` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  saleServices(
    """
    The key used to identify the object.
    """
    key: SaleServices_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: SaleServices_FirstRow
  ): SaleServices @fdc_generated(from: "SaleServices", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Schedule` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  schedule(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Schedule_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Schedule_FirstRow
  ): Schedule @fdc_generated(from: "Schedule", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Service` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  service(
    """
    The key used to identify the object.
    """
    key: Service_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Service_FirstRow
  ): Service @fdc_generated(from: "Service", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Stock` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  stock(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Stock_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Stock_FirstRow
  ): Stock @fdc_generated(from: "Stock", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `User` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  user(
    """
    The key used to identify the object.
    """
    key: User_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: User_FirstRow
  ): User @fdc_generated(from: "User", purpose: QUERY_SINGLE)
  """
  ✨ List `Client` objects in the table, optionally filtered by `where` conditions.
  """
  clients(
    """
    Filter condition to narrow down the query results.
    """
    where: Client_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Client_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Client!]! @fdc_generated(from: "Client", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Employee` objects in the table, optionally filtered by `where` conditions.
  """
  employes(
    """
    Filter condition to narrow down the query results.
    """
    where: Employee_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Employee_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Employee!]! @fdc_generated(from: "Employee", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Pet` objects in the table, optionally filtered by `where` conditions.
  """
  pets(
    """
    Filter condition to narrow down the query results.
    """
    where: Pet_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Pet_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Pet!]! @fdc_generated(from: "Pet", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Sale` objects in the table, optionally filtered by `where` conditions.
  """
  sales(
    """
    Filter condition to narrow down the query results.
    """
    where: Sale_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Sale_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Sale!]! @fdc_generated(from: "Sale", purpose: QUERY_MULTIPLE)
  """
  ✨ List `SaleServices` objects in the table, optionally filtered by `where` conditions.
  """
  saleServicess(
    """
    Filter condition to narrow down the query results.
    """
    where: SaleServices_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [SaleServices_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [SaleServices!]! @fdc_generated(from: "SaleServices", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Schedule` objects in the table, optionally filtered by `where` conditions.
  """
  schedules(
    """
    Filter condition to narrow down the query results.
    """
    where: Schedule_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Schedule_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Schedule!]! @fdc_generated(from: "Schedule", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Service` objects in the table, optionally filtered by `where` conditions.
  """
  services(
    """
    Filter condition to narrow down the query results.
    """
    where: Service_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Service_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Service!]! @fdc_generated(from: "Service", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Stock` objects in the table, optionally filtered by `where` conditions.
  """
  stocks(
    """
    Filter condition to narrow down the query results.
    """
    where: Stock_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Stock_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [Stock!]! @fdc_generated(from: "Stock", purpose: QUERY_MULTIPLE)
  """
  ✨ List `User` objects in the table, optionally filtered by `where` conditions.
  """
  users(
    """
    Filter condition to narrow down the query results.
    """
    where: User_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [User_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100
  ): [User!]! @fdc_generated(from: "User", purpose: QUERY_MULTIPLE)
}
